name: CI-CD - Test, Build and Deploy to Azure

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      api: ${{ steps.filter.outputs.api }}
      web: ${{ steps.filter.outputs.web }}
    steps:
      - uses: actions/checkout@v3
      - name: Detect changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            api:
              - 'project/src/api/**'
            web:
              - 'project/src/frontend/**'

  test:
    runs-on: ubuntu-latest
    needs: detect-changes
    steps:
      - uses: actions/checkout@v3
      - name: Install docker-compose
        run: |
          curl -SL https://github.com/docker/compose/releases/download/v2.24.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          docker-compose version
      - name: Run tests
        run: |
          WANDB_API_KEY="${{ secrets.WANDB_API_KEY }}" \
          WANDB_ARTIFACT_PATH="${{ vars.WANDB_ARTIFACT_PATH }}" \
          docker-compose -f ./project/src/docker-compose.yml up --abort-on-container-exit test

  build-api:
    runs-on: ubuntu-latest
    needs: [test, detect-changes]
    if: needs.detect-changes.outputs.api == 'true'
    steps:
      - uses: actions/checkout@v3
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Docker login to ACR
        run: az acr login --name ${{ vars.AZURE_ACR_NAME }}
      - name: Build & push API image
        run: |
          docker build -t ${{ vars.AZURE_ACR_NAME }}.azurecr.io/house-price-mlops:ci ./project/src/api
          docker push ${{ vars.AZURE_ACR_NAME }}.azurecr.io/house-price-mlops:ci

  build-web:
    runs-on: ubuntu-latest
    needs: [test, detect-changes]
    if: needs.detect-changes.outputs.web == 'true'
    steps:
      - uses: actions/checkout@v3
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Docker login to ACR
        run: az acr login --name ${{ vars.AZURE_ACR_NAME }}
      - name: Build & push Web image
        run: |
          docker build -t ${{ vars.AZURE_ACR_NAME }}.azurecr.io/web-house-price-mlops:ci ./project/src/frontend
          docker push ${{ vars.AZURE_ACR_NAME }}.azurecr.io/web-house-price-mlops:ci

  check-deploy:
    runs-on: ubuntu-latest
    needs: [detect-changes, build-api, build-web]
    outputs:
      deploy-needed: ${{ steps.set.outputs.deploy }}
    steps:
      - id: set
        run: |
          echo "build_api=${{ needs.build-api.result }}" >> $GITHUB_ENV
          echo "build_web=${{ needs.build-web.result }}" >> $GITHUB_ENV

          api_ready=false
          web_ready=false

          if [[ "${{ needs.detect-changes.outputs.api }}" == "true" && "${{ needs.build-api.result }}" == "success" ]]; then
            api_ready=true
          fi

          if [[ "${{ needs.detect-changes.outputs.web }}" == "true" && "${{ needs.build-web.result }}" == "success" ]]; then
            web_ready=true
          fi

          if [[ "$api_ready" == "true" || "$web_ready" == "true" ]]; then
            echo "deploy=true" >> $GITHUB_OUTPUT
          else
            echo "deploy=false" >> $GITHUB_OUTPUT
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: [check-deploy]
    if: needs.check-deploy.outputs.deploy-needed == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Prepare docker-compose.prod.yml
        run: |
          cd project/src
          cp docker-compose.prod.yml docker-compose.yml
          zip deploy.zip docker-compose.yml

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME }}
          package: ./project/src/deploy.zip